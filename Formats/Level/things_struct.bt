/* -*- Mode: C; -*- */
//--------------------------------------
//--- 010 Editor v6.0.3 Binary Template
//
// File:        things_struct.bt
// Author:      ufdada
// Revision:    1.0
// Purpose:     Thing structure
//--------------------------------------
typedef struct ActionPointFlag {
	byte HERO_LAIR : 1;
	byte UNK_1 : 1;
	byte UNK_2 : 1;
	byte UNK_3 : 1;
	byte REVEAL_THROUGH_FOG_OF_WAR : 1;
	byte TOOL_BOX : 1;
	byte IGNORE_SOLID : 1;
    byte unk;
};

typedef struct CreatureBehaviourFlag {
	byte WILL_FIGHT : 1;
	byte LEADER : 1;
	byte FOLLOWER : 1;
	byte WILL_BE_ATTACKED : 1;
	byte RETURN_TO_HERO_LAIR : 1;
	byte FREE_FRIENDS_ON_JAIL_BREAK : 1;
	byte ACT_AS_DROPPED : 1;
	byte START_AS_DYING : 1;
};

typedef struct CreatureBehaviourFlag2 {
	byte DESTROY_ROOMS : 1;
	byte I_AM_A_TOOL : 1;
	byte DIES_INSTANTLY : 1;
	byte I_AM_A_MERCENARY : 1;
};

enum <ubyte> DoorAppearanceFlag {
	NO_DOOR,
	LOCKED_DOOR,
	BLUEPRINT_DOOR
};

enum <uint> ThingType {
	OBJECT_THING = 194,
	TRAP_THING = 195,
	DOOR_THING = 196,
	ACTIONPOINT_THING = 197,
	NEUTRAL_CREATURE_THING = 198,
	GOOD_CREATURE_THING = 199,
	CREATURE_THING = 200,
	HEROPARTY_THING = 201,
	DEAD_BODY_THING = 202,
	EFFECT_GENERATOR_THING = 203,
	ROOM_THING = 204,
	CAMERA_THING = 205
};

enum <ubyte> Objective {
	NO_OBJECTIVE,
	DESTROY_ROOMS_OBJECTIVE = 11,
	DESTROY_WALLS_OBJECTIVE = 12,
	STEAL_GOLD_OBJECTIVE = 13,
	STEAL_SPELLS_OBJECTIVE = 14,
    // 15
    // 16
	STEAL_MAFUFACTURE_CRATES = 17,
	KILL_CREATURES_OBJECTIVE = 18,
	KILL_PLAYER_OBJECTIVE = 19,
    // 20
    // 21
	WAIT_OBJECTIVE = 22,
	SEND_TO_ACTION_POINT_OBJECTIVE = 23,
    // 24
    // 25
    // 26
	JAIL_BREAK_OBJECTIVE = 27
};

enum <ubyte> RoomType {
	PORTAL = 12,
    // 13
	DUNGEON_HEART = 14,
    // 15
    // 16
    // 17
    // 18
    // 19
    // 20
    // 21
    // 22
    // 23
    // 24
    // 25
    // 26
    // 27
    // 28
    // 29
    // 30
    // 31
    // 32
	HERO_GATE_2X2 = 33,
	HERO_GATE_FRONT_END = 34,
    // 35
    // 36
	HERO_GATE_3X1 = 37,
    // 38
    // 39
	HERO_PORTAL = 40
};

typedef struct CameraFlag {
	byte DISABLE_YAW : 1;
	byte DISABLE_ROLL : 1;
	byte DISABLE_PITCH : 1;
	byte DISABLE_ZOOM : 1;
	byte UNKNOWN_10 : 1;
	byte UNKNOWN_20 : 1;
	byte DISABLE_MOVE : 1;
	byte DISABLE_CHANGE : 1;
	byte unk[3];
};

struct GoodCreature {
	int posX;
	int posY;
	int posZ;
	ushort goldHeld;
	ubyte level;
	CreatureBehaviourFlag creatureFlag;
	int objectiveTargetActionPointId;
	int initialHealth;
	ushort triggerId;
	ubyte objectiveTargetPlayerId;
	Objective objective;
	ubyte creatureId;
	ubyte unknown1[2];
	CreatureBehaviourFlag2 creatureFlag2;
};

typedef struct ThingData {
	ThingType type;
	uint dataSize;
	switch (type) {
		case OBJECT_THING:
			struct {
				int posX;
				int posY;
				ubyte unknown[4];
				int keeperSpellId;
				int moneyAmount;
				ushort triggerId;
				ubyte objectId;
				ubyte playerId;
			} objectThing;
			break;
		case TRAP_THING:
			struct {
				int posX;
				int posY;
				int unknown1;
				ubyte numberOfShots;
				ubyte trapId;
				ubyte playerId;
				ubyte unknown2;
			} trapThing;
			break;
		case DOOR_THING:
			struct {
				int posX;
				int posY;
				int unknown1;
				ushort triggerId;
				ubyte doorId;
				ubyte playerId;
				DoorAppearanceFlag doorFlag;
				ubyte unknown2[3];
			} trapThing;
			break;
		case ACTIONPOINT_THING:
			struct {
				int startX;
				int startY;
				int endX;
				int endY;
				ushort waitDelay;
				ActionPointFlag flags;
				ushort triggerId;
				ubyte id;
				ubyte nextWaypointId;
				char name[32];
			} actionPointThing;
			break;
		case NEUTRAL_CREATURE_THING:
			struct {
				int posX;
				int posY;
				int posZ;
				ushort goldHeld;
				ubyte level;
				CreatureBehaviourFlag creatureFlag;
				int initialHealth;
				ushort triggerId;
				ubyte creatureId;
				ubyte unknown1;
			} neutralCreatureThing;
			break;
		case GOOD_CREATURE_THING:
			GoodCreature goodCreature;
			break;
		case CREATURE_THING:
			struct {
				int posX;
				int posY;
				int posZ;
				ushort goldHeld;
				ubyte level;
				CreatureBehaviourFlag creatureFlag;
				int initialHealth;
				int objectiveTargetPlayerId;
				ushort triggerId;
				ubyte creatureId;
				ubyte playerId;
			} keeperCreature;
			break;
		case HEROPARTY_THING:
			struct {
				char name[32];
				ushort triggerId;
				ubyte id;
				int x23;
				int x27;
				GoodCreature partyMembers[16];
			} heroParty;
			break;
		case DEAD_BODY_THING:
			struct {
				int posX;
				int posY;
				int posZ;
				ushort goldHeld;
				ubyte creatureId;
				ubyte playerId;
			} deadCreature;
			break;
		case EFFECT_GENERATOR_THING:
			struct {
				int posX;
				int posY;
				int x08;
				int x0c;
				ushort x10;
				ushort x12;
				ushort effectIds[4];
				ubyte frequency;
				ubyte id;
				ubyte pad[6];
			} effectGenerator;
			break;
		case ROOM_THING:
			struct {
				int posX;
				int posY;
				int x08;
				short x0c;
				Direction dir;
				ubyte x0f;
				ushort initialHealth;
				RoomType type;
				ubyte playerId;
			} room;
			break;
		case CAMERA_THING:
			struct {
				Vector3f x00;
				Vector3f x0c;
				Vector3f x18;
				float32 fog;
				float32 fogMin;
				float32 fogMax;
				float32 height;
				float32 heightMin;
				float32 heightMax;
				float32 fov;
				float32 fovMin;
				float32 fovMax;
				CameraFlag flag;
				ushort angleYaw;
				ushort angleRoll;
				ushort anglePitch;
				ushort id;
			} camera;
			break;
		default:
            Printf("Skipping unknown data %d\n", type);
			ubyte unknownData[dataSize];
	}
	
};
